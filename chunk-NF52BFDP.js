import{a as g,b as p}from"./chunk-PJZ2M27N.js";import{a as m,b as l}from"./chunk-4PBOS6ET.js";import{Ga as t,Q as n,W as a,e as c}from"./chunk-6U5VWFB5.js";var h=class s{apiUrl=g.apiUrl+"microorganisms";http=a(l);alertsService=a(p);microorganisms=t([]);currentPage=t(1);pageSize=t(20);totalPages=t(10);totalRecords=t(0);hasPrevious=t(!1);hasNext=t(!0);listMicroorganisms(i=this.currentPage(),r=this.pageSize()){let o=new m().set("pageNumber",i.toString()).set("pageSize",r.toString());this.http.get(this.apiUrl,{params:o}).subscribe({next:e=>{this.totalPages.set(e.totalPages),this.setMicroorganismData(e)},error:e=>this.alertsService.error("Error loading microorganisms: "+e)})}getGeneByCondition(i){i===""?this.listMicroorganisms():this.http.get(`${this.apiUrl}/search`,{params:{term:i}}).subscribe(r=>{this.setMicroorganismData(r)})}getMicroorganisms(){return this.microorganisms()}getMicroorganismById(i){return this.http.get(`${this.apiUrl}/${i}`)}getMicroorganismsByCode(i){i===""?this.listMicroorganisms():this.http.get(`${this.apiUrl}/search`,{params:{code:i}}).subscribe(r=>{this.setMicroorganismData(r)})}setMicroorganismData(i){i.items?(this.microorganisms.set(i.items),this.totalRecords.set(i.totalCount),this.hasPrevious.set(i.currentPage>1),this.hasNext.set(i.currentPage<i.totalPages)):(this.microorganisms.set([]),this.totalRecords.set(0),this.hasPrevious.set(!1),this.hasNext.set(!1))}createMicroorganism(i){this.http.post(this.apiUrl,i).subscribe({next:r=>{this.alertsService.successful("\xA1\xC9xito al crear el microorganismo! C\xF3digo: "+r.cicNumber),this.listMicroorganisms()},error:r=>this.alertsService.error("Error al crear el microorganismo: "+r)})}updateMicroorganism(i){this.http.put(`${this.apiUrl}/`,i).subscribe({next:r=>{this.alertsService.successful("El microorganismo con c\xF3digo: "+r.cicNumber+" se edit\xF3 correctamente."),this.listMicroorganisms()},error:r=>this.alertsService.error("Error al editar el microorganismo: "+r)})}deleteMicroorganism(i){return c(this,null,function*(){if(yield this.alertsService.confirm("\xBFEst\xE1s seguro de que deseas eliminar este registro?","S\xED, eliminar","Cancelar"))this.http.delete(`${this.apiUrl}/${i}`).subscribe({next:()=>{this.alertsService.successful("\xA1El registro ha sido eliminado correctamente!"),this.listMicroorganisms()},error:o=>this.alertsService.error("Error al eliminar el microorganismo: "+o)});else{this.alertsService.alert("Operaci\xF3n cancelada");return}})}static \u0275fac=function(r){return new(r||s)};static \u0275prov=n({token:s,factory:s.\u0275fac,providedIn:"root"})};export{h as a};
